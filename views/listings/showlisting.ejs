
<% layout("./layouts/boilerplate.ejs")%>
<div class="row">
  <div class="col-8 offset-3 mt-3">
    <h3><%=listing.title%></h3>
  </div>
  <div class="card col-6 offset-3 listing-card">
    <img src="<%=listing.image.url%>" class="card-img-top show-img sep-img" alt="..." />
    <br>
    <div class="card-body">
      <p class="card-text">Owned By: <b><%=listing.owner.username%></b> </p>
      <p class="card-text"><%=listing.description%><br /></p>
      <p class="card-text">
        &#8377; <%=listing.price.toLocaleString("en-IN")%> / night <br />
      </p>
      <p class="card-text"><%=listing.location%><br /></p>
      <p class="card-text"><%=listing.country%></p>
      <p class="card-text">Category: <%=listing.category%></p>
    </div>
  </div>
  <% if(currUser && listing.owner._id.equals(currUser._id)){%>
  <div class="btns">
    <a
      href="/listings/<%=listing._id%>/edit"
      class="btn btn-dark col-1 mb-3 offset-3 edit-btn"
      ><i class="fa-solid fa-pen-to-square"></i>&nbsp;&nbsp;Edit   </a>
    <form method="POST" action="/listings/<%=listing._id%>?_method=DELETE">
      <button class="btn btn-dark mb-3 offset-5"><i class="fa-solid fa-trash"></i></button>
    </form>
  </div>
<%}%>

  <div class="col-8 offset-3 mt-3 mb-3">
    <hr />
    <%if(currUser){%>
    <h4>Leave a Review:</h4>
    <form
      method="post"
      action="/listings/<%=listing._id%>/review"
      novalidate
      class="needs-validation"
    >
      <!-- <div>
        <label class="form-label">Rating</label>
        <input
          type="range"
          min="1"
          max="5"
          name="review[rating]"
          class="form-range"
        />
      </div> -->
      <div class=" mt-3">
        <label class="form-label">Rating</label>
      <fieldset class="starability-checkmark">
        <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
        <input type="radio" id="first-rate1" name="review[rating]" value="1" />
        <label for="first-rate1" title="Terrible">1 star</label>
        <input type="radio" id="first-rate2" name="review[rating]" value="2" />
        <label for="first-rate2" title="Not good">2 stars</label>
        <input type="radio" id="first-rate3" name="review[rating]" value="3" />
        <label for="first-rate3" title="Average">3 stars</label>
        <input type="radio" id="first-rate4" name="review[rating]" value="4" />
        <label for="first-rate4" title="Very good">4 stars</label>
        <input type="radio" id="first-rate5" name="review[rating]" value="5" />
        <label for="first-rate5" title="Amazing">5 stars</label>
      </fieldset>
    </div>
      <div>
        <label class="form-label">Comments</label>
        <textarea
          name="review[comment]"
          rows="3"
          cols="50"
          class="form-control"
          required
        ></textarea>
        <div class="invalid-feedback">Please enter a valid comment</div>
      </div>
      <button class="btn btn-outline-dark mt-3 mb-3">Submit</button>
    </form>
  
    <hr />
    <%}%>

   <% if(listing.reviews.length > 0){%>
    <div class="row">
      <h4>Reviews</h4>
      <% for(review of listing.reviews) {%>
      <div class="card col-5 ms-3 mb-3">
        <div class="card-body mt-3 mb-3">
          <h5 class="card-title">@<%=review.author.username%></h5>
          <p class="starability-result card-text" data-rating=<%=review.rating%>>
          </p>
          <p class="card-text"><%=review.comment%></p>

        </div>
        <form
          class="mb-3"
          method="post"
          action="/listings/<%=listing._id%>/review/<%=review._id%>?_method=DELETE"
        >
          <button class="btn btn-sm btn-dark">Delete</button>
        </form>
      </div>
      <%}%>
    </div>
    <%}%>
  </div>
  <div class="col-8 offset-3 mt-3 mb-3">
    <h4 >Where you'll be</h4><br>
    <div id="map"></div>
  </div>
</div>
<script>
  
const map = new maplibregl.Map({
    container: 'map',
    style: 'https://api.maptiler.com/maps/streets/style.json?key=7UuNfgRZLlMkrzkU94Rx',
    center: [0, 0], // Initial center
    zoom: 2, // Initial zoom
  });

  // OpenCage Geocoding Function
  async function geocode(address) {
    const apiKey = '5a633cc5d12b453684a31e7be04023ef'; // Replace with your OpenCage API key
    const url = `https://api.opencagedata.com/geocode/v1/json?q=${encodeURIComponent(address)}&key=${apiKey}`;
    const response = await fetch(url);
    const data = await response.json();
    if (data.results && data.results.length > 0) {
      const { lat, lng } = data.results[0].geometry;
      return { lat, lng };
    } else {
      throw new Error('Location not found');
    }
  }

  // Add Marker for Geocoded Address
  async function addMarkerForAddress(address) {
    try {
      const { lat, lng } = await geocode(address);
      new maplibregl.Marker()
        .setLngLat([lng, lat])
        .addTo(map);
      map.flyTo({ center: [lng, lat], zoom: 14 });
    } catch (error) {
      console.error('Error geocoding address:', error);
    }
  }

  // Example: Add marker for "Berlin"
  addMarkerForAddress('<%= listing.location %>');
</script>